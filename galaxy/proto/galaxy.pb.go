// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: proto/galaxy.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventType int32

const (
	EventType_EvUnused        EventType = 0
	EventType_EvNewFood       EventType = 1
	EventType_EvNewPlayer     EventType = 2
	EventType_EvPlayerMove    EventType = 3
	EventType_EvPlayerGrow    EventType = 4
	EventType_EvDestroyFood   EventType = 5
	EventType_EvDestroyPlayer EventType = 6
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "EvUnused",
		1: "EvNewFood",
		2: "EvNewPlayer",
		3: "EvPlayerMove",
		4: "EvPlayerGrow",
		5: "EvDestroyFood",
		6: "EvDestroyPlayer",
	}
	EventType_value = map[string]int32{
		"EvUnused":        0,
		"EvNewFood":       1,
		"EvNewPlayer":     2,
		"EvPlayerMove":    3,
		"EvPlayerGrow":    4,
		"EvDestroyFood":   5,
		"EvDestroyPlayer": 6,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_galaxy_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_proto_galaxy_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_proto_galaxy_proto_rawDescGZIP(), []int{0}
}

type OperationType int32

const (
	OperationType_OpUnused    OperationType = 0
	OperationType_OpJoin      OperationType = 1
	OperationType_OpLeave     OperationType = 2
	OperationType_OpMove      OperationType = 3
	OperationType_OpEatPlayer OperationType = 4
	OperationType_OpEatFood   OperationType = 5
)

// Enum value maps for OperationType.
var (
	OperationType_name = map[int32]string{
		0: "OpUnused",
		1: "OpJoin",
		2: "OpLeave",
		3: "OpMove",
		4: "OpEatPlayer",
		5: "OpEatFood",
	}
	OperationType_value = map[string]int32{
		"OpUnused":    0,
		"OpJoin":      1,
		"OpLeave":     2,
		"OpMove":      3,
		"OpEatPlayer": 4,
		"OpEatFood":   5,
	}
)

func (x OperationType) Enum() *OperationType {
	p := new(OperationType)
	*p = x
	return p
}

func (x OperationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperationType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_galaxy_proto_enumTypes[1].Descriptor()
}

func (OperationType) Type() protoreflect.EnumType {
	return &file_proto_galaxy_proto_enumTypes[1]
}

func (x OperationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperationType.Descriptor instead.
func (OperationType) EnumDescriptor() ([]byte, []int) {
	return file_proto_galaxy_proto_rawDescGZIP(), []int{1}
}

type Vector2D struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             *uint32                `protobuf:"varint,1,opt,name=X" json:"X,omitempty"`
	Y             *uint32                `protobuf:"varint,2,opt,name=Y" json:"Y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Vector2D) Reset() {
	*x = Vector2D{}
	mi := &file_proto_galaxy_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vector2D) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector2D) ProtoMessage() {}

func (x *Vector2D) ProtoReflect() protoreflect.Message {
	mi := &file_proto_galaxy_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector2D.ProtoReflect.Descriptor instead.
func (*Vector2D) Descriptor() ([]byte, []int) {
	return file_proto_galaxy_proto_rawDescGZIP(), []int{0}
}

func (x *Vector2D) GetX() uint32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *Vector2D) GetY() uint32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

type Event struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	EventType *EventType             `protobuf:"varint,1,opt,name=eventType,enum=galaxy.EventType" json:"eventType,omitempty"`
	// Types that are valid to be assigned to EventData:
	//
	//	*Event_NewPlayerEvent
	//	*Event_NewFoodEvent
	//	*Event_PlayerMoveEvent
	//	*Event_PlayerGrowEvent
	//	*Event_DestroyFoodEvent
	//	*Event_DestroyPlayerEvent
	EventData     isEvent_EventData `protobuf_oneof:"eventData"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Event) Reset() {
	*x = Event{}
	mi := &file_proto_galaxy_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_proto_galaxy_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_proto_galaxy_proto_rawDescGZIP(), []int{1}
}

func (x *Event) GetEventType() EventType {
	if x != nil && x.EventType != nil {
		return *x.EventType
	}
	return EventType_EvUnused
}

func (x *Event) GetEventData() isEvent_EventData {
	if x != nil {
		return x.EventData
	}
	return nil
}

func (x *Event) GetNewPlayerEvent() *NewPlayerEvent {
	if x != nil {
		if x, ok := x.EventData.(*Event_NewPlayerEvent); ok {
			return x.NewPlayerEvent
		}
	}
	return nil
}

func (x *Event) GetNewFoodEvent() *NewFoodEvent {
	if x != nil {
		if x, ok := x.EventData.(*Event_NewFoodEvent); ok {
			return x.NewFoodEvent
		}
	}
	return nil
}

func (x *Event) GetPlayerMoveEvent() *PlayerMoveEvent {
	if x != nil {
		if x, ok := x.EventData.(*Event_PlayerMoveEvent); ok {
			return x.PlayerMoveEvent
		}
	}
	return nil
}

func (x *Event) GetPlayerGrowEvent() *PlayerGrowEvent {
	if x != nil {
		if x, ok := x.EventData.(*Event_PlayerGrowEvent); ok {
			return x.PlayerGrowEvent
		}
	}
	return nil
}

func (x *Event) GetDestroyFoodEvent() *DestroyFoodEvent {
	if x != nil {
		if x, ok := x.EventData.(*Event_DestroyFoodEvent); ok {
			return x.DestroyFoodEvent
		}
	}
	return nil
}

func (x *Event) GetDestroyPlayerEvent() *DestroyPlayerEvent {
	if x != nil {
		if x, ok := x.EventData.(*Event_DestroyPlayerEvent); ok {
			return x.DestroyPlayerEvent
		}
	}
	return nil
}

type isEvent_EventData interface {
	isEvent_EventData()
}

type Event_NewPlayerEvent struct {
	NewPlayerEvent *NewPlayerEvent `protobuf:"bytes,2,opt,name=newPlayerEvent,oneof"`
}

type Event_NewFoodEvent struct {
	NewFoodEvent *NewFoodEvent `protobuf:"bytes,3,opt,name=newFoodEvent,oneof"`
}

type Event_PlayerMoveEvent struct {
	PlayerMoveEvent *PlayerMoveEvent `protobuf:"bytes,4,opt,name=playerMoveEvent,oneof"`
}

type Event_PlayerGrowEvent struct {
	PlayerGrowEvent *PlayerGrowEvent `protobuf:"bytes,5,opt,name=playerGrowEvent,oneof"`
}

type Event_DestroyFoodEvent struct {
	DestroyFoodEvent *DestroyFoodEvent `protobuf:"bytes,6,opt,name=destroyFoodEvent,oneof"`
}

type Event_DestroyPlayerEvent struct {
	DestroyPlayerEvent *DestroyPlayerEvent `protobuf:"bytes,7,opt,name=destroyPlayerEvent,oneof"`
}

func (*Event_NewPlayerEvent) isEvent_EventData() {}

func (*Event_NewFoodEvent) isEvent_EventData() {}

func (*Event_PlayerMoveEvent) isEvent_EventData() {}

func (*Event_PlayerGrowEvent) isEvent_EventData() {}

func (*Event_DestroyFoodEvent) isEvent_EventData() {}

func (*Event_DestroyPlayerEvent) isEvent_EventData() {}

type NewPlayerEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerID      *uint32                `protobuf:"varint,1,opt,name=playerID" json:"playerID,omitempty"`
	Position      *Vector2D              `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
	Radius        *uint32                `protobuf:"varint,3,opt,name=radius" json:"radius,omitempty"`
	Color         *uint32                `protobuf:"varint,4,opt,name=color" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewPlayerEvent) Reset() {
	*x = NewPlayerEvent{}
	mi := &file_proto_galaxy_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewPlayerEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewPlayerEvent) ProtoMessage() {}

func (x *NewPlayerEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_galaxy_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewPlayerEvent.ProtoReflect.Descriptor instead.
func (*NewPlayerEvent) Descriptor() ([]byte, []int) {
	return file_proto_galaxy_proto_rawDescGZIP(), []int{2}
}

func (x *NewPlayerEvent) GetPlayerID() uint32 {
	if x != nil && x.PlayerID != nil {
		return *x.PlayerID
	}
	return 0
}

func (x *NewPlayerEvent) GetPosition() *Vector2D {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *NewPlayerEvent) GetRadius() uint32 {
	if x != nil && x.Radius != nil {
		return *x.Radius
	}
	return 0
}

func (x *NewPlayerEvent) GetColor() uint32 {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return 0
}

type NewFoodEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Position      *Vector2D              `protobuf:"bytes,1,opt,name=position" json:"position,omitempty"`
	Color         *uint32                `protobuf:"varint,2,opt,name=color" json:"color,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NewFoodEvent) Reset() {
	*x = NewFoodEvent{}
	mi := &file_proto_galaxy_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NewFoodEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewFoodEvent) ProtoMessage() {}

func (x *NewFoodEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_galaxy_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewFoodEvent.ProtoReflect.Descriptor instead.
func (*NewFoodEvent) Descriptor() ([]byte, []int) {
	return file_proto_galaxy_proto_rawDescGZIP(), []int{3}
}

func (x *NewFoodEvent) GetPosition() *Vector2D {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *NewFoodEvent) GetColor() uint32 {
	if x != nil && x.Color != nil {
		return *x.Color
	}
	return 0
}

type PlayerMoveEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerID      *uint32                `protobuf:"varint,1,opt,name=playerID" json:"playerID,omitempty"`
	Position      *Vector2D              `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerMoveEvent) Reset() {
	*x = PlayerMoveEvent{}
	mi := &file_proto_galaxy_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerMoveEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerMoveEvent) ProtoMessage() {}

func (x *PlayerMoveEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_galaxy_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerMoveEvent.ProtoReflect.Descriptor instead.
func (*PlayerMoveEvent) Descriptor() ([]byte, []int) {
	return file_proto_galaxy_proto_rawDescGZIP(), []int{4}
}

func (x *PlayerMoveEvent) GetPlayerID() uint32 {
	if x != nil && x.PlayerID != nil {
		return *x.PlayerID
	}
	return 0
}

func (x *PlayerMoveEvent) GetPosition() *Vector2D {
	if x != nil {
		return x.Position
	}
	return nil
}

type PlayerGrowEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerID      *uint32                `protobuf:"varint,1,opt,name=playerID" json:"playerID,omitempty"`
	Radius        *uint32                `protobuf:"varint,2,opt,name=radius" json:"radius,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerGrowEvent) Reset() {
	*x = PlayerGrowEvent{}
	mi := &file_proto_galaxy_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerGrowEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerGrowEvent) ProtoMessage() {}

func (x *PlayerGrowEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_galaxy_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerGrowEvent.ProtoReflect.Descriptor instead.
func (*PlayerGrowEvent) Descriptor() ([]byte, []int) {
	return file_proto_galaxy_proto_rawDescGZIP(), []int{5}
}

func (x *PlayerGrowEvent) GetPlayerID() uint32 {
	if x != nil && x.PlayerID != nil {
		return *x.PlayerID
	}
	return 0
}

func (x *PlayerGrowEvent) GetRadius() uint32 {
	if x != nil && x.Radius != nil {
		return *x.Radius
	}
	return 0
}

type DestroyFoodEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Position      *Vector2D              `protobuf:"bytes,1,opt,name=position" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DestroyFoodEvent) Reset() {
	*x = DestroyFoodEvent{}
	mi := &file_proto_galaxy_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestroyFoodEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyFoodEvent) ProtoMessage() {}

func (x *DestroyFoodEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_galaxy_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyFoodEvent.ProtoReflect.Descriptor instead.
func (*DestroyFoodEvent) Descriptor() ([]byte, []int) {
	return file_proto_galaxy_proto_rawDescGZIP(), []int{6}
}

func (x *DestroyFoodEvent) GetPosition() *Vector2D {
	if x != nil {
		return x.Position
	}
	return nil
}

type DestroyPlayerEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerID      *uint32                `protobuf:"varint,1,opt,name=playerID" json:"playerID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DestroyPlayerEvent) Reset() {
	*x = DestroyPlayerEvent{}
	mi := &file_proto_galaxy_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DestroyPlayerEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestroyPlayerEvent) ProtoMessage() {}

func (x *DestroyPlayerEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_galaxy_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestroyPlayerEvent.ProtoReflect.Descriptor instead.
func (*DestroyPlayerEvent) Descriptor() ([]byte, []int) {
	return file_proto_galaxy_proto_rawDescGZIP(), []int{7}
}

func (x *DestroyPlayerEvent) GetPlayerID() uint32 {
	if x != nil && x.PlayerID != nil {
		return *x.PlayerID
	}
	return 0
}

type Operation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OperationType *OperationType         `protobuf:"varint,1,opt,name=operationType,enum=galaxy.OperationType" json:"operationType,omitempty"`
	// Types that are valid to be assigned to OperationData:
	//
	//	*Operation_JoinOperation
	//	*Operation_LeaveOperation
	//	*Operation_MoveOperation
	//	*Operation_EatPlayerOperation
	//	*Operation_EatFoodOperation
	OperationData isOperation_OperationData `protobuf_oneof:"operationData"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Operation) Reset() {
	*x = Operation{}
	mi := &file_proto_galaxy_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Operation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Operation) ProtoMessage() {}

func (x *Operation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_galaxy_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Operation.ProtoReflect.Descriptor instead.
func (*Operation) Descriptor() ([]byte, []int) {
	return file_proto_galaxy_proto_rawDescGZIP(), []int{8}
}

func (x *Operation) GetOperationType() OperationType {
	if x != nil && x.OperationType != nil {
		return *x.OperationType
	}
	return OperationType_OpUnused
}

func (x *Operation) GetOperationData() isOperation_OperationData {
	if x != nil {
		return x.OperationData
	}
	return nil
}

func (x *Operation) GetJoinOperation() *JoinOperation {
	if x != nil {
		if x, ok := x.OperationData.(*Operation_JoinOperation); ok {
			return x.JoinOperation
		}
	}
	return nil
}

func (x *Operation) GetLeaveOperation() *LeaveOperation {
	if x != nil {
		if x, ok := x.OperationData.(*Operation_LeaveOperation); ok {
			return x.LeaveOperation
		}
	}
	return nil
}

func (x *Operation) GetMoveOperation() *MoveOperation {
	if x != nil {
		if x, ok := x.OperationData.(*Operation_MoveOperation); ok {
			return x.MoveOperation
		}
	}
	return nil
}

func (x *Operation) GetEatPlayerOperation() *EatPlayerOperation {
	if x != nil {
		if x, ok := x.OperationData.(*Operation_EatPlayerOperation); ok {
			return x.EatPlayerOperation
		}
	}
	return nil
}

func (x *Operation) GetEatFoodOperation() *EatFoodOperation {
	if x != nil {
		if x, ok := x.OperationData.(*Operation_EatFoodOperation); ok {
			return x.EatFoodOperation
		}
	}
	return nil
}

type isOperation_OperationData interface {
	isOperation_OperationData()
}

type Operation_JoinOperation struct {
	JoinOperation *JoinOperation `protobuf:"bytes,2,opt,name=joinOperation,oneof"`
}

type Operation_LeaveOperation struct {
	LeaveOperation *LeaveOperation `protobuf:"bytes,3,opt,name=leaveOperation,oneof"`
}

type Operation_MoveOperation struct {
	MoveOperation *MoveOperation `protobuf:"bytes,4,opt,name=moveOperation,oneof"`
}

type Operation_EatPlayerOperation struct {
	EatPlayerOperation *EatPlayerOperation `protobuf:"bytes,5,opt,name=eatPlayerOperation,oneof"`
}

type Operation_EatFoodOperation struct {
	EatFoodOperation *EatFoodOperation `protobuf:"bytes,6,opt,name=eatFoodOperation,oneof"`
}

func (*Operation_JoinOperation) isOperation_OperationData() {}

func (*Operation_LeaveOperation) isOperation_OperationData() {}

func (*Operation_MoveOperation) isOperation_OperationData() {}

func (*Operation_EatPlayerOperation) isOperation_OperationData() {}

func (*Operation_EatFoodOperation) isOperation_OperationData() {}

type JoinOperation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerID      *uint32                `protobuf:"varint,1,opt,name=playerID" json:"playerID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinOperation) Reset() {
	*x = JoinOperation{}
	mi := &file_proto_galaxy_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinOperation) ProtoMessage() {}

func (x *JoinOperation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_galaxy_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinOperation.ProtoReflect.Descriptor instead.
func (*JoinOperation) Descriptor() ([]byte, []int) {
	return file_proto_galaxy_proto_rawDescGZIP(), []int{9}
}

func (x *JoinOperation) GetPlayerID() uint32 {
	if x != nil && x.PlayerID != nil {
		return *x.PlayerID
	}
	return 0
}

type LeaveOperation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerID      *uint32                `protobuf:"varint,1,opt,name=playerID" json:"playerID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveOperation) Reset() {
	*x = LeaveOperation{}
	mi := &file_proto_galaxy_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveOperation) ProtoMessage() {}

func (x *LeaveOperation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_galaxy_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveOperation.ProtoReflect.Descriptor instead.
func (*LeaveOperation) Descriptor() ([]byte, []int) {
	return file_proto_galaxy_proto_rawDescGZIP(), []int{10}
}

func (x *LeaveOperation) GetPlayerID() uint32 {
	if x != nil && x.PlayerID != nil {
		return *x.PlayerID
	}
	return 0
}

type MoveOperation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerID      *uint32                `protobuf:"varint,1,opt,name=playerID" json:"playerID,omitempty"`
	Position      *Vector2D              `protobuf:"bytes,2,opt,name=position" json:"position,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MoveOperation) Reset() {
	*x = MoveOperation{}
	mi := &file_proto_galaxy_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MoveOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveOperation) ProtoMessage() {}

func (x *MoveOperation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_galaxy_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveOperation.ProtoReflect.Descriptor instead.
func (*MoveOperation) Descriptor() ([]byte, []int) {
	return file_proto_galaxy_proto_rawDescGZIP(), []int{11}
}

func (x *MoveOperation) GetPlayerID() uint32 {
	if x != nil && x.PlayerID != nil {
		return *x.PlayerID
	}
	return 0
}

func (x *MoveOperation) GetPosition() *Vector2D {
	if x != nil {
		return x.Position
	}
	return nil
}

type EatPlayerOperation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerID      *uint32                `protobuf:"varint,1,opt,name=playerID" json:"playerID,omitempty"`
	PlayerEaten   *uint32                `protobuf:"varint,2,opt,name=playerEaten" json:"playerEaten,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EatPlayerOperation) Reset() {
	*x = EatPlayerOperation{}
	mi := &file_proto_galaxy_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EatPlayerOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EatPlayerOperation) ProtoMessage() {}

func (x *EatPlayerOperation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_galaxy_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EatPlayerOperation.ProtoReflect.Descriptor instead.
func (*EatPlayerOperation) Descriptor() ([]byte, []int) {
	return file_proto_galaxy_proto_rawDescGZIP(), []int{12}
}

func (x *EatPlayerOperation) GetPlayerID() uint32 {
	if x != nil && x.PlayerID != nil {
		return *x.PlayerID
	}
	return 0
}

func (x *EatPlayerOperation) GetPlayerEaten() uint32 {
	if x != nil && x.PlayerEaten != nil {
		return *x.PlayerEaten
	}
	return 0
}

type EatFoodOperation struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerID      *uint32                `protobuf:"varint,1,opt,name=playerID" json:"playerID,omitempty"`
	FoodPosition  *Vector2D              `protobuf:"bytes,2,opt,name=foodPosition" json:"foodPosition,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EatFoodOperation) Reset() {
	*x = EatFoodOperation{}
	mi := &file_proto_galaxy_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EatFoodOperation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EatFoodOperation) ProtoMessage() {}

func (x *EatFoodOperation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_galaxy_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EatFoodOperation.ProtoReflect.Descriptor instead.
func (*EatFoodOperation) Descriptor() ([]byte, []int) {
	return file_proto_galaxy_proto_rawDescGZIP(), []int{13}
}

func (x *EatFoodOperation) GetPlayerID() uint32 {
	if x != nil && x.PlayerID != nil {
		return *x.PlayerID
	}
	return 0
}

func (x *EatFoodOperation) GetFoodPosition() *Vector2D {
	if x != nil {
		return x.FoodPosition
	}
	return nil
}

var File_proto_galaxy_proto protoreflect.FileDescriptor

var file_proto_galaxy_proto_rawDesc = string([]byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x67, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x22, 0x26, 0x0a, 0x08,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32, 0x44, 0x12, 0x0c, 0x0a, 0x01, 0x58, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x01, 0x58, 0x12, 0x0c, 0x0a, 0x01, 0x59, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x01, 0x59, 0x22, 0xe3, 0x03, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2f,
	0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x11, 0x2e, 0x67, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x40, 0x0a, 0x0e, 0x6e, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x6c, 0x61, 0x78, 0x79,
	0x2e, 0x4e, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x0e, 0x6e, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x3a, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x46, 0x6f, 0x6f, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x61, 0x6c, 0x61, 0x78, 0x79,
	0x2e, 0x4e, 0x65, 0x77, 0x46, 0x6f, 0x6f, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52,
	0x0c, 0x6e, 0x65, 0x77, 0x46, 0x6f, 0x6f, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x43, 0x0a,
	0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x43, 0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x77,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x61,
	0x6c, 0x61, 0x78, 0x79, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x72, 0x6f, 0x77, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x72,
	0x6f, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x10, 0x64, 0x65, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x46, 0x6f, 0x6f, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x46, 0x6f, 0x6f, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x10, 0x64,
	0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x46, 0x6f, 0x6f, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x4c, 0x0a, 0x12, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x61,
	0x6c, 0x61, 0x78, 0x79, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x12, 0x64, 0x65, 0x73, 0x74, 0x72,
	0x6f, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x0b, 0x0a,
	0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x88, 0x01, 0x0a, 0x0e, 0x4e,
	0x65, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x61,
	0x6c, 0x61, 0x78, 0x79, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32, 0x44, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x52, 0x0a, 0x0c, 0x4e, 0x65, 0x77, 0x46, 0x6f, 0x6f, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x61, 0x6c, 0x61, 0x78, 0x79,
	0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32, 0x44, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x5b, 0x0a, 0x0f, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x61, 0x6c,
	0x61, 0x78, 0x79, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32, 0x44, 0x52, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x45, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x47, 0x72, 0x6f, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x72, 0x61, 0x64, 0x69, 0x75, 0x73, 0x22, 0x40, 0x0a,
	0x10, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x46, 0x6f, 0x6f, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x2c, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x2e, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x32, 0x44, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x30, 0x0a, 0x12, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x44, 0x22, 0xaf, 0x03, 0x0a, 0x09, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x3b, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0d, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x0d,
	0x6a, 0x6f, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x2e, 0x4a, 0x6f, 0x69,
	0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x6a, 0x6f,
	0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0e, 0x6c,
	0x65, 0x61, 0x76, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x2e, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x6c,
	0x65, 0x61, 0x76, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3d, 0x0a,
	0x0d, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x2e, 0x4d, 0x6f,
	0x76, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0d, 0x6d,
	0x6f, 0x76, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x12,
	0x65, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x61, 0x6c, 0x61, 0x78,
	0x79, 0x2e, 0x45, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x12, 0x65, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x46, 0x0a, 0x10, 0x65, 0x61,
	0x74, 0x46, 0x6f, 0x6f, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x2e, 0x45, 0x61,
	0x74, 0x46, 0x6f, 0x6f, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00,
	0x52, 0x10, 0x65, 0x61, 0x74, 0x46, 0x6f, 0x6f, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x42, 0x0f, 0x0a, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x2b, 0x0a, 0x0d, 0x4a, 0x6f, 0x69, 0x6e, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44,
	0x22, 0x2c, 0x0a, 0x0e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x22, 0x59,
	0x0a, 0x0d, 0x4d, 0x6f, 0x76, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x12, 0x2c, 0x0a, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x67, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32, 0x44, 0x52,
	0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x52, 0x0a, 0x12, 0x45, 0x61, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x12, 0x20, 0x0a, 0x0b, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x61, 0x74, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x45, 0x61, 0x74, 0x65, 0x6e, 0x22, 0x64, 0x0a,
	0x10, 0x45, 0x61, 0x74, 0x46, 0x6f, 0x6f, 0x64, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x44, 0x12, 0x34, 0x0a,
	0x0c, 0x66, 0x6f, 0x6f, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x2e, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x32, 0x44, 0x52, 0x0c, 0x66, 0x6f, 0x6f, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x2a, 0x85, 0x01, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x76, 0x55, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x10, 0x00, 0x12,
	0x0d, 0x0a, 0x09, 0x45, 0x76, 0x4e, 0x65, 0x77, 0x46, 0x6f, 0x6f, 0x64, 0x10, 0x01, 0x12, 0x0f,
	0x0a, 0x0b, 0x45, 0x76, 0x4e, 0x65, 0x77, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x10, 0x02, 0x12,
	0x10, 0x0a, 0x0c, 0x45, 0x76, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x10,
	0x03, 0x12, 0x10, 0x0a, 0x0c, 0x45, 0x76, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x47, 0x72, 0x6f,
	0x77, 0x10, 0x04, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x76, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79,
	0x46, 0x6f, 0x6f, 0x64, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x45, 0x76, 0x44, 0x65, 0x73, 0x74,
	0x72, 0x6f, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x10, 0x06, 0x2a, 0x62, 0x0a, 0x0d, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08,
	0x4f, 0x70, 0x55, 0x6e, 0x75, 0x73, 0x65, 0x64, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x70,
	0x4a, 0x6f, 0x69, 0x6e, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x70, 0x4c, 0x65, 0x61, 0x76,
	0x65, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x70, 0x4d, 0x6f, 0x76, 0x65, 0x10, 0x03, 0x12,
	0x0f, 0x0a, 0x0b, 0x4f, 0x70, 0x45, 0x61, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x10, 0x04,
	0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x70, 0x45, 0x61, 0x74, 0x46, 0x6f, 0x6f, 0x64, 0x10, 0x05, 0x42,
	0x0e, 0x5a, 0x0c, 0x67, 0x61, 0x6c, 0x61, 0x78, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x08, 0x65, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x70, 0xe8, 0x07,
})

var (
	file_proto_galaxy_proto_rawDescOnce sync.Once
	file_proto_galaxy_proto_rawDescData []byte
)

func file_proto_galaxy_proto_rawDescGZIP() []byte {
	file_proto_galaxy_proto_rawDescOnce.Do(func() {
		file_proto_galaxy_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_galaxy_proto_rawDesc), len(file_proto_galaxy_proto_rawDesc)))
	})
	return file_proto_galaxy_proto_rawDescData
}

var file_proto_galaxy_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_galaxy_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_galaxy_proto_goTypes = []any{
	(EventType)(0),             // 0: galaxy.EventType
	(OperationType)(0),         // 1: galaxy.OperationType
	(*Vector2D)(nil),           // 2: galaxy.Vector2D
	(*Event)(nil),              // 3: galaxy.Event
	(*NewPlayerEvent)(nil),     // 4: galaxy.NewPlayerEvent
	(*NewFoodEvent)(nil),       // 5: galaxy.NewFoodEvent
	(*PlayerMoveEvent)(nil),    // 6: galaxy.PlayerMoveEvent
	(*PlayerGrowEvent)(nil),    // 7: galaxy.PlayerGrowEvent
	(*DestroyFoodEvent)(nil),   // 8: galaxy.DestroyFoodEvent
	(*DestroyPlayerEvent)(nil), // 9: galaxy.DestroyPlayerEvent
	(*Operation)(nil),          // 10: galaxy.Operation
	(*JoinOperation)(nil),      // 11: galaxy.JoinOperation
	(*LeaveOperation)(nil),     // 12: galaxy.LeaveOperation
	(*MoveOperation)(nil),      // 13: galaxy.MoveOperation
	(*EatPlayerOperation)(nil), // 14: galaxy.EatPlayerOperation
	(*EatFoodOperation)(nil),   // 15: galaxy.EatFoodOperation
}
var file_proto_galaxy_proto_depIdxs = []int32{
	0,  // 0: galaxy.Event.eventType:type_name -> galaxy.EventType
	4,  // 1: galaxy.Event.newPlayerEvent:type_name -> galaxy.NewPlayerEvent
	5,  // 2: galaxy.Event.newFoodEvent:type_name -> galaxy.NewFoodEvent
	6,  // 3: galaxy.Event.playerMoveEvent:type_name -> galaxy.PlayerMoveEvent
	7,  // 4: galaxy.Event.playerGrowEvent:type_name -> galaxy.PlayerGrowEvent
	8,  // 5: galaxy.Event.destroyFoodEvent:type_name -> galaxy.DestroyFoodEvent
	9,  // 6: galaxy.Event.destroyPlayerEvent:type_name -> galaxy.DestroyPlayerEvent
	2,  // 7: galaxy.NewPlayerEvent.position:type_name -> galaxy.Vector2D
	2,  // 8: galaxy.NewFoodEvent.position:type_name -> galaxy.Vector2D
	2,  // 9: galaxy.PlayerMoveEvent.position:type_name -> galaxy.Vector2D
	2,  // 10: galaxy.DestroyFoodEvent.position:type_name -> galaxy.Vector2D
	1,  // 11: galaxy.Operation.operationType:type_name -> galaxy.OperationType
	11, // 12: galaxy.Operation.joinOperation:type_name -> galaxy.JoinOperation
	12, // 13: galaxy.Operation.leaveOperation:type_name -> galaxy.LeaveOperation
	13, // 14: galaxy.Operation.moveOperation:type_name -> galaxy.MoveOperation
	14, // 15: galaxy.Operation.eatPlayerOperation:type_name -> galaxy.EatPlayerOperation
	15, // 16: galaxy.Operation.eatFoodOperation:type_name -> galaxy.EatFoodOperation
	2,  // 17: galaxy.MoveOperation.position:type_name -> galaxy.Vector2D
	2,  // 18: galaxy.EatFoodOperation.foodPosition:type_name -> galaxy.Vector2D
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_proto_galaxy_proto_init() }
func file_proto_galaxy_proto_init() {
	if File_proto_galaxy_proto != nil {
		return
	}
	file_proto_galaxy_proto_msgTypes[1].OneofWrappers = []any{
		(*Event_NewPlayerEvent)(nil),
		(*Event_NewFoodEvent)(nil),
		(*Event_PlayerMoveEvent)(nil),
		(*Event_PlayerGrowEvent)(nil),
		(*Event_DestroyFoodEvent)(nil),
		(*Event_DestroyPlayerEvent)(nil),
	}
	file_proto_galaxy_proto_msgTypes[8].OneofWrappers = []any{
		(*Operation_JoinOperation)(nil),
		(*Operation_LeaveOperation)(nil),
		(*Operation_MoveOperation)(nil),
		(*Operation_EatPlayerOperation)(nil),
		(*Operation_EatFoodOperation)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_galaxy_proto_rawDesc), len(file_proto_galaxy_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_galaxy_proto_goTypes,
		DependencyIndexes: file_proto_galaxy_proto_depIdxs,
		EnumInfos:         file_proto_galaxy_proto_enumTypes,
		MessageInfos:      file_proto_galaxy_proto_msgTypes,
	}.Build()
	File_proto_galaxy_proto = out.File
	file_proto_galaxy_proto_goTypes = nil
	file_proto_galaxy_proto_depIdxs = nil
}
